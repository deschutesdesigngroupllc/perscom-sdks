/* tslint:disable */
/* eslint-disable */
/**
 * PERSCOM Personnel Management System API
 * The PERSCOM API describes how to interact and manipulate your PERSCOM data available at https://perscom.io. The API provides a powerful interface to allow for third-party collaboration and integration with your PERSCOM Dashboard.
 *
 * The version of the OpenAPI document: v2
 * Contact: support@deschutesdesigngroup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FieldResource
 */
export interface FieldResource {
    /**
     * 
     * @type {string}
     * @memberof FieldResource
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof FieldResource
     */
    key?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FieldResource
     */
    type?: string;
    /**
     * 
     * @type {string}
     * @memberof FieldResource
     */
    cast?: string | null;
    /**
     * Supports HTML.
     * @type {string}
     * @memberof FieldResource
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FieldResource
     */
    placeholder?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FieldResource
     */
    _default?: string | null;
    /**
     * 
     * @type {string}
     * @memberof FieldResource
     */
    help?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof FieldResource
     */
    required?: boolean;
    /**
     * 
     * @type {string}
     * @memberof FieldResource
     */
    rules?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof FieldResource
     */
    readonly?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof FieldResource
     */
    hidden?: boolean;
    /**
     * 
     * @type {Array<object>}
     * @memberof FieldResource
     */
    options?: Array<object>;
    /**
     * 
     * @type {string}
     * @memberof FieldResource
     */
    optionsType?: FieldResourceOptionsTypeEnum;
    /**
     * If the options type is a model, this is the resource that should populate the options field.
     * @type {string}
     * @memberof FieldResource
     */
    optionsModel?: string;
    /**
     * 
     * @type {string}
     * @memberof FieldResource
     */
    label?: string;
    /**
     * The date the resource was created. Stored in UTC.
     * @type {Date}
     * @memberof FieldResource
     */
    createdAt?: Date;
    /**
     * The date the resource was updated. Stored in UTC.
     * @type {Date}
     * @memberof FieldResource
     */
    updatedAt?: Date;
    /**
     * 
     * @type {number}
     * @memberof FieldResource
     */
    id?: number;
}


/**
 * @export
 */
export const FieldResourceOptionsTypeEnum = {
    Array: 'array',
    Model: 'model'
} as const;
export type FieldResourceOptionsTypeEnum = typeof FieldResourceOptionsTypeEnum[keyof typeof FieldResourceOptionsTypeEnum];


/**
 * Check if a given object implements the FieldResource interface.
 */
export function instanceOfFieldResource(value: object): value is FieldResource {
    return true;
}

export function FieldResourceFromJSON(json: any): FieldResource {
    return FieldResourceFromJSONTyped(json, false);
}

export function FieldResourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): FieldResource {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'key': json['key'] == null ? undefined : json['key'],
        'type': json['type'] == null ? undefined : json['type'],
        'cast': json['cast'] == null ? undefined : json['cast'],
        'description': json['description'] == null ? undefined : json['description'],
        'placeholder': json['placeholder'] == null ? undefined : json['placeholder'],
        '_default': json['default'] == null ? undefined : json['default'],
        'help': json['help'] == null ? undefined : json['help'],
        'required': json['required'] == null ? undefined : json['required'],
        'rules': json['rules'] == null ? undefined : json['rules'],
        'readonly': json['readonly'] == null ? undefined : json['readonly'],
        'hidden': json['hidden'] == null ? undefined : json['hidden'],
        'options': json['options'] == null ? undefined : json['options'],
        'optionsType': json['options_type'] == null ? undefined : json['options_type'],
        'optionsModel': json['options_model'] == null ? undefined : json['options_model'],
        'label': json['label'] == null ? undefined : json['label'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'id': json['id'] == null ? undefined : json['id'],
    };
}

export function FieldResourceToJSON(json: any): FieldResource {
    return FieldResourceToJSONTyped(json, false);
}

export function FieldResourceToJSONTyped(value?: FieldResource | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'key': value['key'],
        'type': value['type'],
        'cast': value['cast'],
        'description': value['description'],
        'placeholder': value['placeholder'],
        'default': value['_default'],
        'help': value['help'],
        'required': value['required'],
        'rules': value['rules'],
        'readonly': value['readonly'],
        'hidden': value['hidden'],
        'options': value['options'],
        'options_type': value['optionsType'],
        'options_model': value['optionsModel'],
        'label': value['label'],
        'created_at': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updated_at': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
        'id': value['id'],
    };
}

