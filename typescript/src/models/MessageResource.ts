/* tslint:disable */
/* eslint-disable */
/**
 * PERSCOM Personnel Management System API
 * The PERSCOM API describes how to interact and manipulate your PERSCOM data available at https://perscom.io. The API provides a powerful interface to allow for third-party collaboration and integration with your PERSCOM Dashboard.
 *
 * The version of the OpenAPI document: v2
 * Contact: support@deschutesdesigngroup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MessageResource
 */
export interface MessageResource {
    /**
     * Supports HTML.
     * @type {string}
     * @memberof MessageResource
     */
    message: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof MessageResource
     */
    channels: Array<MessageResourceChannelsEnum>;
    /**
     * An array of User IDs. Defaults to everyone if no recipients are provided.
     * @type {Array<number>}
     * @memberof MessageResource
     */
    recipients?: Array<number>;
    /**
     * 
     * @type {boolean}
     * @memberof MessageResource
     */
    repeats?: boolean;
    /**
     * Set a future date to send the msssage at.
     * @type {Date}
     * @memberof MessageResource
     */
    sendAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof MessageResource
     */
    sentAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof MessageResource
     */
    label?: string;
    /**
     * The date the resource was created. Stored in UTC.
     * @type {Date}
     * @memberof MessageResource
     */
    createdAt?: Date;
    /**
     * The date the resource was updated. Stored in UTC.
     * @type {Date}
     * @memberof MessageResource
     */
    updatedAt?: Date;
    /**
     * 
     * @type {number}
     * @memberof MessageResource
     */
    id?: number;
}


/**
 * @export
 */
export const MessageResourceChannelsEnum = {
    Broadcast: 'broadcast',
    Database: 'database',
    DiscordPrivate: 'discord_private',
    DiscordPublic: 'discord_public',
    Mail: 'mail',
    Sms: 'sms'
} as const;
export type MessageResourceChannelsEnum = typeof MessageResourceChannelsEnum[keyof typeof MessageResourceChannelsEnum];


/**
 * Check if a given object implements the MessageResource interface.
 */
export function instanceOfMessageResource(value: object): value is MessageResource {
    if (!('message' in value) || value['message'] === undefined) return false;
    if (!('channels' in value) || value['channels'] === undefined) return false;
    return true;
}

export function MessageResourceFromJSON(json: any): MessageResource {
    return MessageResourceFromJSONTyped(json, false);
}

export function MessageResourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): MessageResource {
    if (json == null) {
        return json;
    }
    return {
        
        'message': json['message'],
        'channels': json['channels'],
        'recipients': json['recipients'] == null ? undefined : json['recipients'],
        'repeats': json['repeats'] == null ? undefined : json['repeats'],
        'sendAt': json['send_at'] == null ? undefined : (new Date(json['send_at'])),
        'sentAt': json['sent_at'] == null ? undefined : (new Date(json['sent_at'])),
        'label': json['label'] == null ? undefined : json['label'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'id': json['id'] == null ? undefined : json['id'],
    };
}

export function MessageResourceToJSON(json: any): MessageResource {
    return MessageResourceToJSONTyped(json, false);
}

export function MessageResourceToJSONTyped(value?: MessageResource | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'message': value['message'],
        'channels': value['channels'],
        'recipients': value['recipients'],
        'repeats': value['repeats'],
        'send_at': value['sendAt'] == null ? undefined : ((value['sendAt'] as any).toISOString()),
        'sent_at': value['sentAt'] == null ? undefined : ((value['sentAt'] as any).toISOString()),
        'label': value['label'],
        'created_at': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updated_at': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
        'id': value['id'],
    };
}

