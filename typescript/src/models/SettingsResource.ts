/* tslint:disable */
/* eslint-disable */
/**
 * PERSCOM Personnel Management System API
 * The PERSCOM API describes how to interact and manipulate your PERSCOM data available at https://perscom.io. The API provides a powerful interface to allow for third-party collaboration and integration with your PERSCOM Dashboard.
 *
 * The version of the OpenAPI document: v2
 * Contact: support@deschutesdesigngroup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SettingsPayload } from './SettingsPayload';
import {
    SettingsPayloadFromJSON,
    SettingsPayloadFromJSONTyped,
    SettingsPayloadToJSON,
    SettingsPayloadToJSONTyped,
} from './SettingsPayload';

/**
 * 
 * @export
 * @interface SettingsResource
 */
export interface SettingsResource {
    /**
     * 
     * @type {string}
     * @memberof SettingsResource
     */
    group?: string | null;
    /**
     * 
     * @type {string}
     * @memberof SettingsResource
     */
    name?: string;
    /**
     * 
     * @type {SettingsPayload}
     * @memberof SettingsResource
     */
    payload?: SettingsPayload;
    /**
     * 
     * @type {boolean}
     * @memberof SettingsResource
     */
    locked?: boolean;
    /**
     * The date the resource was created. Stored in UTC.
     * @type {Date}
     * @memberof SettingsResource
     */
    createdAt?: Date;
    /**
     * The date the resource was updated. Stored in UTC.
     * @type {Date}
     * @memberof SettingsResource
     */
    updatedAt?: Date;
    /**
     * 
     * @type {number}
     * @memberof SettingsResource
     */
    id?: number;
}

/**
 * Check if a given object implements the SettingsResource interface.
 */
export function instanceOfSettingsResource(value: object): value is SettingsResource {
    return true;
}

export function SettingsResourceFromJSON(json: any): SettingsResource {
    return SettingsResourceFromJSONTyped(json, false);
}

export function SettingsResourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): SettingsResource {
    if (json == null) {
        return json;
    }
    return {
        
        'group': json['group'] == null ? undefined : json['group'],
        'name': json['name'] == null ? undefined : json['name'],
        'payload': json['payload'] == null ? undefined : SettingsPayloadFromJSON(json['payload']),
        'locked': json['locked'] == null ? undefined : json['locked'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'id': json['id'] == null ? undefined : json['id'],
    };
}

export function SettingsResourceToJSON(json: any): SettingsResource {
    return SettingsResourceToJSONTyped(json, false);
}

export function SettingsResourceToJSONTyped(value?: SettingsResource | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'group': value['group'],
        'name': value['name'],
        'payload': SettingsPayloadToJSON(value['payload']),
        'locked': value['locked'],
        'created_at': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updated_at': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
        'id': value['id'],
    };
}

