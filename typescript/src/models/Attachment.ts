/* tslint:disable */
/* eslint-disable */
/**
 * PERSCOM Personnel Management System API
 * The PERSCOM API describes how to interact and manipulate your PERSCOM data available at https://perscom.io. The API provides a powerful interface to allow for third-party collaboration and integration with your PERSCOM Dashboard.
 *
 * The version of the OpenAPI document: v2
 * Contact: support@deschutesdesigngroup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Attachment
 */
export interface Attachment {
    /**
     * 
     * @type {string}
     * @memberof Attachment
     */
    name: string;
    /**
     * The file to be uploaded.
     * @type {Blob}
     * @memberof Attachment
     */
    file: Blob;
    /**
     * 
     * @type {string}
     * @memberof Attachment
     */
    readonly filename?: string;
    /**
     * 
     * @type {string}
     * @memberof Attachment
     */
    readonly modelType?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Attachment
     */
    readonly modelId?: number | null;
    /**
     * 
     * @type {string}
     * @memberof Attachment
     */
    readonly path?: string;
    /**
     * 
     * @type {string}
     * @memberof Attachment
     */
    readonly attachmentUrl?: string;
}

/**
 * Check if a given object implements the Attachment interface.
 */
export function instanceOfAttachment(value: object): value is Attachment {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('file' in value) || value['file'] === undefined) return false;
    return true;
}

export function AttachmentFromJSON(json: any): Attachment {
    return AttachmentFromJSONTyped(json, false);
}

export function AttachmentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Attachment {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'file': json['file'],
        'filename': json['filename'] == null ? undefined : json['filename'],
        'modelType': json['model_type'] == null ? undefined : json['model_type'],
        'modelId': json['model_id'] == null ? undefined : json['model_id'],
        'path': json['path'] == null ? undefined : json['path'],
        'attachmentUrl': json['attachment_url'] == null ? undefined : json['attachment_url'],
    };
}

export function AttachmentToJSON(json: any): Attachment {
    return AttachmentToJSONTyped(json, false);
}

export function AttachmentToJSONTyped(value?: Omit<Attachment, 'filename'|'model_type'|'model_id'|'path'|'attachment_url'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'file': value['file'],
    };
}

