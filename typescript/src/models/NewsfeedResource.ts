/* tslint:disable */
/* eslint-disable */
/**
 * PERSCOM Personnel Management System API
 * The PERSCOM API describes how to interact and manipulate your PERSCOM data available at https://perscom.io. The API provides a powerful interface to allow for third-party collaboration and integration with your PERSCOM Dashboard.
 *
 * The version of the OpenAPI document: v2
 * Contact: support@deschutesdesigngroup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface NewsfeedResource
 */
export interface NewsfeedResource {
    /**
     * 
     * @type {number}
     * @memberof NewsfeedResource
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof NewsfeedResource
     */
    logName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof NewsfeedResource
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof NewsfeedResource
     */
    subjectType?: string | null;
    /**
     * 
     * @type {string}
     * @memberof NewsfeedResource
     */
    event?: string | null;
    /**
     * 
     * @type {number}
     * @memberof NewsfeedResource
     */
    subjectId?: number | null;
    /**
     * 
     * @type {string}
     * @memberof NewsfeedResource
     */
    causerType?: string | null;
    /**
     * 
     * @type {string}
     * @memberof NewsfeedResource
     */
    causerId?: string | null;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof NewsfeedResource
     */
    properties?: { [key: string]: any; };
    /**
     * 
     * @type {string}
     * @memberof NewsfeedResource
     */
    batchUuid?: string | null;
    /**
     * The date the resource was created. Stored in UTC.
     * @type {Date}
     * @memberof NewsfeedResource
     */
    createdAt?: Date | null;
    /**
     * The date the resource was updated. Stored in UTC.
     * @type {Date}
     * @memberof NewsfeedResource
     */
    updatedAt?: Date | null;
}

/**
 * Check if a given object implements the NewsfeedResource interface.
 */
export function instanceOfNewsfeedResource(value: object): value is NewsfeedResource {
    return true;
}

export function NewsfeedResourceFromJSON(json: any): NewsfeedResource {
    return NewsfeedResourceFromJSONTyped(json, false);
}

export function NewsfeedResourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): NewsfeedResource {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'logName': json['log_name'] == null ? undefined : json['log_name'],
        'description': json['description'] == null ? undefined : json['description'],
        'subjectType': json['subject_type'] == null ? undefined : json['subject_type'],
        'event': json['event'] == null ? undefined : json['event'],
        'subjectId': json['subject_id'] == null ? undefined : json['subject_id'],
        'causerType': json['causer_type'] == null ? undefined : json['causer_type'],
        'causerId': json['causer_id'] == null ? undefined : json['causer_id'],
        'properties': json['properties'] == null ? undefined : json['properties'],
        'batchUuid': json['batch_uuid'] == null ? undefined : json['batch_uuid'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
    };
}

export function NewsfeedResourceToJSON(json: any): NewsfeedResource {
    return NewsfeedResourceToJSONTyped(json, false);
}

export function NewsfeedResourceToJSONTyped(value?: NewsfeedResource | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'log_name': value['logName'],
        'description': value['description'],
        'subject_type': value['subjectType'],
        'event': value['event'],
        'subject_id': value['subjectId'],
        'causer_type': value['causerType'],
        'causer_id': value['causerId'],
        'properties': value['properties'],
        'batch_uuid': value['batchUuid'],
        'created_at': value['createdAt'] == null ? undefined : ((value['createdAt'] as any).toISOString()),
        'updated_at': value['updatedAt'] == null ? undefined : ((value['updatedAt'] as any).toISOString()),
    };
}

