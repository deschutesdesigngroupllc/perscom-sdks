/* tslint:disable */
/* eslint-disable */
/**
 * PERSCOM Personnel Management System API
 * The PERSCOM API describes how to interact and manipulate your PERSCOM data available at https://perscom.io. The API provides a powerful interface to allow for third-party collaboration and integration with your PERSCOM Dashboard.
 *
 * The version of the OpenAPI document: v2
 * Contact: support@deschutesdesigngroup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CommentResource
 */
export interface CommentResource {
    /**
     * 
     * @type {number}
     * @memberof CommentResource
     */
    authorId: number;
    /**
     * 
     * @type {string}
     * @memberof CommentResource
     */
    modelType?: string | null;
    /**
     * 
     * @type {number}
     * @memberof CommentResource
     */
    modelId?: number | null;
    /**
     * Supports HTML.
     * @type {string}
     * @memberof CommentResource
     */
    comment: string;
    /**
     * 
     * @type {string}
     * @memberof CommentResource
     */
    label?: string;
    /**
     * The date the resource was created. Stored in UTC.
     * @type {Date}
     * @memberof CommentResource
     */
    createdAt?: Date;
    /**
     * The date the resource was updated. Stored in UTC.
     * @type {Date}
     * @memberof CommentResource
     */
    updatedAt?: Date;
    /**
     * 
     * @type {number}
     * @memberof CommentResource
     */
    id?: number;
}

/**
 * Check if a given object implements the CommentResource interface.
 */
export function instanceOfCommentResource(value: object): value is CommentResource {
    if (!('authorId' in value) || value['authorId'] === undefined) return false;
    if (!('comment' in value) || value['comment'] === undefined) return false;
    return true;
}

export function CommentResourceFromJSON(json: any): CommentResource {
    return CommentResourceFromJSONTyped(json, false);
}

export function CommentResourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommentResource {
    if (json == null) {
        return json;
    }
    return {
        
        'authorId': json['author_id'],
        'modelType': json['model_type'] == null ? undefined : json['model_type'],
        'modelId': json['model_id'] == null ? undefined : json['model_id'],
        'comment': json['comment'],
        'label': json['label'] == null ? undefined : json['label'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'id': json['id'] == null ? undefined : json['id'],
    };
}

export function CommentResourceToJSON(json: any): CommentResource {
    return CommentResourceToJSONTyped(json, false);
}

export function CommentResourceToJSONTyped(value?: CommentResource | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'author_id': value['authorId'],
        'model_type': value['modelType'],
        'model_id': value['modelId'],
        'comment': value['comment'],
        'label': value['label'],
        'created_at': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updated_at': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
        'id': value['id'],
    };
}

