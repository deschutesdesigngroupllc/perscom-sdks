/* tslint:disable */
/* eslint-disable */
/**
 * PERSCOM Personnel Management System API
 * The PERSCOM API describes how to interact and manipulate your PERSCOM data available at https://perscom.io. The API provides a powerful interface to allow for third-party collaboration and integration with your PERSCOM Dashboard.
 *
 * The version of the OpenAPI document: v2
 * Contact: support@deschutesdesigngroup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface RankRecord
 */
export interface RankRecord {
    /**
     * 
     * @type {number}
     * @memberof RankRecord
     */
    userId: number;
    /**
     * 
     * @type {number}
     * @memberof RankRecord
     */
    rankId: number;
    /**
     * 
     * @type {number}
     * @memberof RankRecord
     */
    documentId?: number | null;
    /**
     * 
     * @type {number}
     * @memberof RankRecord
     */
    authorId?: number | null;
    /**
     * Supports HTML.
     * @type {string}
     * @memberof RankRecord
     */
    text?: string | null;
    /**
     * 0: Promotion, 1: Demotion, 2: Lateral, 3: Transfer
     * @type {number}
     * @memberof RankRecord
     */
    type: RankRecordTypeEnum;
}


/**
 * @export
 */
export const RankRecordTypeEnum = {
    NUMBER_0: 0,
    NUMBER_1: 1,
    NUMBER_2: 2,
    NUMBER_3: 3
} as const;
export type RankRecordTypeEnum = typeof RankRecordTypeEnum[keyof typeof RankRecordTypeEnum];


/**
 * Check if a given object implements the RankRecord interface.
 */
export function instanceOfRankRecord(value: object): value is RankRecord {
    if (!('userId' in value) || value['userId'] === undefined) return false;
    if (!('rankId' in value) || value['rankId'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function RankRecordFromJSON(json: any): RankRecord {
    return RankRecordFromJSONTyped(json, false);
}

export function RankRecordFromJSONTyped(json: any, ignoreDiscriminator: boolean): RankRecord {
    if (json == null) {
        return json;
    }
    return {
        
        'userId': json['user_id'],
        'rankId': json['rank_id'],
        'documentId': json['document_id'] == null ? undefined : json['document_id'],
        'authorId': json['author_id'] == null ? undefined : json['author_id'],
        'text': json['text'] == null ? undefined : json['text'],
        'type': json['type'],
    };
}

export function RankRecordToJSON(json: any): RankRecord {
    return RankRecordToJSONTyped(json, false);
}

export function RankRecordToJSONTyped(value?: RankRecord | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'user_id': value['userId'],
        'rank_id': value['rankId'],
        'document_id': value['documentId'],
        'author_id': value['authorId'],
        'text': value['text'],
        'type': value['type'],
    };
}

