/* tslint:disable */
/* eslint-disable */
/**
 * PERSCOM Personnel Management System API
 * The PERSCOM API describes how to interact and manipulate your PERSCOM data available at https://perscom.io. The API provides a powerful interface to allow for third-party collaboration and integration with your PERSCOM Dashboard.
 *
 * The version of the OpenAPI document: v2
 * Contact: support@deschutesdesigngroup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserResource
 */
export interface UserResource {
    /**
     * 
     * @type {string}
     * @memberof UserResource
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof UserResource
     */
    email: string;
    /**
     * 
     * @type {Date}
     * @memberof UserResource
     */
    emailVerifiedAt?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof UserResource
     */
    phoneNumber?: string | null;
    /**
     * 
     * @type {number}
     * @memberof UserResource
     */
    positionId?: number | null;
    /**
     * 
     * @type {number}
     * @memberof UserResource
     */
    rankId?: number | null;
    /**
     * 
     * @type {number}
     * @memberof UserResource
     */
    specialtyId?: number | null;
    /**
     * 
     * @type {number}
     * @memberof UserResource
     */
    statusId?: number | null;
    /**
     * 
     * @type {number}
     * @memberof UserResource
     */
    unitId?: number | null;
    /**
     * 
     * @type {boolean}
     * @memberof UserResource
     */
    approved?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof UserResource
     */
    readonly online?: boolean;
    /**
     * Supports HTML.
     * @type {string}
     * @memberof UserResource
     */
    notes?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof UserResource
     */
    notesUpdatedAt?: Date | null;
    /**
     * 
     * @type {Blob}
     * @memberof UserResource
     */
    profilePhoto?: Blob | null;
    /**
     * 
     * @type {string}
     * @memberof UserResource
     */
    readonly profilePhotoUrl?: string | null;
    /**
     * 
     * @type {Blob}
     * @memberof UserResource
     */
    coverPhoto?: Blob | null;
    /**
     * 
     * @type {string}
     * @memberof UserResource
     */
    readonly coverPhotoUrl?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserResource
     */
    readonly discordUserId?: string | null;
    /**
     * 
     * @type {string}
     * @memberof UserResource
     */
    readonly timezone?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof UserResource
     */
    lastSeenAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof UserResource
     */
    readonly lastAssignmentChangeDate?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof UserResource
     */
    readonly lastRankChangeDate?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof UserResource
     */
    label?: string;
    /**
     * The date the resource was created. Stored in UTC.
     * @type {Date}
     * @memberof UserResource
     */
    createdAt?: Date;
    /**
     * The date the resource was updated. Stored in UTC.
     * @type {Date}
     * @memberof UserResource
     */
    updatedAt?: Date;
    /**
     * 
     * @type {number}
     * @memberof UserResource
     */
    id?: number;
}

/**
 * Check if a given object implements the UserResource interface.
 */
export function instanceOfUserResource(value: object): value is UserResource {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('email' in value) || value['email'] === undefined) return false;
    return true;
}

export function UserResourceFromJSON(json: any): UserResource {
    return UserResourceFromJSONTyped(json, false);
}

export function UserResourceFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserResource {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'email': json['email'],
        'emailVerifiedAt': json['email_verified_at'] == null ? undefined : (new Date(json['email_verified_at'])),
        'phoneNumber': json['phone_number'] == null ? undefined : json['phone_number'],
        'positionId': json['position_id'] == null ? undefined : json['position_id'],
        'rankId': json['rank_id'] == null ? undefined : json['rank_id'],
        'specialtyId': json['specialty_id'] == null ? undefined : json['specialty_id'],
        'statusId': json['status_id'] == null ? undefined : json['status_id'],
        'unitId': json['unit_id'] == null ? undefined : json['unit_id'],
        'approved': json['approved'] == null ? undefined : json['approved'],
        'online': json['online'] == null ? undefined : json['online'],
        'notes': json['notes'] == null ? undefined : json['notes'],
        'notesUpdatedAt': json['notes_updated_at'] == null ? undefined : (new Date(json['notes_updated_at'])),
        'profilePhoto': json['profile_photo'] == null ? undefined : json['profile_photo'],
        'profilePhotoUrl': json['profile_photo_url'] == null ? undefined : json['profile_photo_url'],
        'coverPhoto': json['cover_photo'] == null ? undefined : json['cover_photo'],
        'coverPhotoUrl': json['cover_photo_url'] == null ? undefined : json['cover_photo_url'],
        'discordUserId': json['discord_user_id'] == null ? undefined : json['discord_user_id'],
        'timezone': json['timezone'] == null ? undefined : json['timezone'],
        'lastSeenAt': json['last_seen_at'] == null ? undefined : (new Date(json['last_seen_at'])),
        'lastAssignmentChangeDate': json['last_assignment_change_date'] == null ? undefined : (new Date(json['last_assignment_change_date'])),
        'lastRankChangeDate': json['last_rank_change_date'] == null ? undefined : (new Date(json['last_rank_change_date'])),
        'label': json['label'] == null ? undefined : json['label'],
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'id': json['id'] == null ? undefined : json['id'],
    };
}

export function UserResourceToJSON(json: any): UserResource {
    return UserResourceToJSONTyped(json, false);
}

export function UserResourceToJSONTyped(value?: Omit<UserResource, 'online'|'profile_photo_url'|'cover_photo_url'|'discord_user_id'|'timezone'|'last_assignment_change_date'|'last_rank_change_date'> | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'name': value['name'],
        'email': value['email'],
        'email_verified_at': value['emailVerifiedAt'] == null ? undefined : ((value['emailVerifiedAt'] as any).toISOString()),
        'phone_number': value['phoneNumber'],
        'position_id': value['positionId'],
        'rank_id': value['rankId'],
        'specialty_id': value['specialtyId'],
        'status_id': value['statusId'],
        'unit_id': value['unitId'],
        'approved': value['approved'],
        'notes': value['notes'],
        'notes_updated_at': value['notesUpdatedAt'] == null ? undefined : ((value['notesUpdatedAt'] as any).toISOString()),
        'profile_photo': value['profilePhoto'],
        'cover_photo': value['coverPhoto'],
        'last_seen_at': value['lastSeenAt'] == null ? undefined : ((value['lastSeenAt'] as any).toISOString()),
        'label': value['label'],
        'created_at': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
        'updated_at': value['updatedAt'] == null ? undefined : ((value['updatedAt']).toISOString()),
        'id': value['id'],
    };
}

